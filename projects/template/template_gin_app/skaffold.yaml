apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: template-gin-app

build:
  artifacts:
    - image: template-gin-app
      custom:
        buildCommand: |
          # Navigate to monorepo root first
          MONOREPO_ROOT=$(cd ../../.. && pwd)
          cd $MONOREPO_ROOT

          # This is a template project - create a basic Go app for demonstration
          TEMP_DIR=$(mktemp -d)
          cat > $TEMP_DIR/Dockerfile << 'EOF'
          FROM golang:1.21-alpine AS builder
          WORKDIR /app
          COPY . .
          RUN echo 'package main\nimport "fmt"\nfunc main() { fmt.Println("Template Gin App Demo") }' > main.go
          RUN go mod init template-gin-app || true
          RUN go build -o main .
          
          FROM alpine:latest
          RUN apk --no-cache add ca-certificates
          WORKDIR /root/
          COPY --from=builder /app/main .
          EXPOSE 8080
          CMD ["./main"]
          EOF

          # Copy template files for reference
          cp -r projects/template/template_gin_app/* $TEMP_DIR/ || true
          
          # Build the Docker image
          docker build -t $IMAGE $TEMP_DIR

          # Clean up
          rm -rf $TEMP_DIR
        dependencies:
          paths:
            - "**/*.jinja"
            - "**/*.go.jinja"
            - "copier.yml"
  local:
    push: false
    useBuildkit: false

manifests:
  rawYaml:
    - kubernetes/deployment.yaml
    - kubernetes/service.yaml

deploy:
  kubectl: {}

portForward:
  - resourceType: service
    resourceName: template-gin-app
    port: 8080
    localPort: 8080

profiles:
  - name: dev
    activation:
      - command: dev
    patches:
      - op: add
        path: /build/local/push
        value: false
      - op: add
        path: /deploy/kubectl/flags
        value:
          apply:
            - --validate=false
            - --force=true