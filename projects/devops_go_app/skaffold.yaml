# See:
# - https://github.com/GoogleContainerTools/skaffold/blob/main/examples/multi-config-microservices/skaffold.yaml
# - https://github.com/GoogleContainerTools/skaffold/blob/main/examples/structure-tests/skaffold.yaml

apiVersion: skaffold/v4beta5
kind: Config
metadata:
  # skaffold dev -m devops-go-app-config [-v debug]
  name: devops-go-app-config

# ISSUE: Broken for now after migration to rules_oci.
# REFERENCE: https://github.com/GoogleContainerTools/skaffold/blob/main/pkg/skaffold/build/bazel/build.go#L105
# build:
#   local:
#     push: false
#   # https://skaffold.dev/docs/taggers/
#   # tagPolicy:
#   #   sha256: {}
#   artifacts:
#   - image: bazel/tarball
#     context: .
#     bazel:
#       target: //projects/go_devops_cli_app:tarball.tar
#       # target: //projects/go_devops_cli_app:go_devops_cli_app_image.tar
#       # target: //projects/go_devops_cli_app:app_layer.tar
#       # target: //projects/go_devops_cli_app:image.tar
#       # target: //projects/go_devops_cli_app:transitioned_image.tar

# Custom build still using bazel in build.sh
build:
  local:
    push: false
  artifacts:
    - image: bazel/devops-go-app
      custom:
        buildCommand: ./scripts/build.sh
        dependencies:
          paths:
            - src/**
            - tests/**
            - kubernetes/**
            - ./BUILD.bazel
            - ./scripts/build.sh
          ignore:
            - README*
            - tmp/**

manifests:
  rawYaml:
    - kubernetes/*

# deploy:
#   kubectl:
#     manifests:
#     - k8s/*

# deploy:
#   helm:
#     releases:
#     - name: feedrobot
#       chartPath: charts/feedrobot
#       valuesFiles:
#         - values-dev.yml

# profiles:
# - name: dev
#   activation:
#     - kubeContext: docker-desktop
#     - command: dev

# https://medium.com/@no1.melman10/skaffold-and-my-process-4d4d88b3cc92
# profiles:
#   - name: dev
#     activation:
#       - command: dev
#       - command: delete
#       - command: build
#   - name: ci
#     activation:
#       - env: ENV=dev
#   - name: preprod
#     activation:
#       - env: ENV=preprod
#   - name: preprod
#     activation:
#       - env: ENV=production

# Troubleshooting:
# - bazel cquery //projects/go_devops_cli_app:app_layer --output starlark --starlark:expr 'target.files.to_list()[0].path'
# - bazel cquery //projects/go_devops_cli_app:image --output starlark --starlark:expr 'target.files.to_list()[0].path'
# - bazel cquery //projects/go_devops_cli_app:transitioned_image --output starlark --starlark:expr 'target.files.to_list()[0].path'
# - bazel cquery //projects/go_devops_cli_app:tarball --output starlark --starlark:expr 'target.files.to_list()[0].path'
# - bazel cquery //projects/go_devops_cli_app:tarball.tar --output starlark --starlark:expr 'target.files.to_list()[0].path'
# - bazel query "kind('source file', deps('//projects/go_devops_cli_app:tarball')) union buildfiles(deps('//projects/go_devops_cli_app:tarball'))" --noimplicit_deps --order_output=no --output=label
