load("@rules_python//python:defs.bzl", "py_binary", "py_library")
load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")
load("//fixes:py_image_layer.bzl", "py_image_layer")
load("@container_structure_test//:defs.bzl", "container_structure_test")

py_library(
    name = "hello_world_lib",
    srcs = [
        "app/__init__.py",
        "app/cli.py",
    ],
    imports = [".."],
    visibility = ["//:__subpackages__"],
)

py_binary(
    name = "hello_world_bin",
    srcs = ["app/__main__.py"],
    imports = [".."],
    main = "__main__.py",
    visibility = ["//:__subpackages__"],
    deps = [":hello_world_lib"],
)

py_image_layer(
    name = "hello_world_layer",
    binary = ":hello_world_bin",
    root = "/opt",
)

# TODO: Use a custom base to include cross-cutting concerns
# See: https://github.com/bazel-contrib/rules_oci/blob/main/docs/image.md
oci_image(
    name = "py_helloworld_image",
    base = "@distroless_python",
    entrypoint = ["/opt/projects/py_helloworld_v2_cli_app/hello_world_bin"],
    tars = [":hello_world_layer"],
)

platform(
    name = "aarch64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:aarch64",
    ],
)

platform(
    name = "x86_64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

platform_transition_filegroup(
    name = "transitioned_image",
    srcs = [":py_helloworld_image"],
    target_platform = select({
        "@platforms//cpu:arm64": ":aarch64_linux",
        "@platforms//cpu:x86_64": ":x86_64_linux",
    }),
)

# $ bazel build //projects/py_helloworld_cli_app:tarball
# $ docker load --input $(bazel cquery --output=files //projects/py_helloworld_cli_app:tarball)
# $ docker run --rm local/py_helloworld_cli_app:latest
# See: https://github.com/bazel-contrib/rules_oci/blob/main/docs/tarball.md
oci_tarball(
    name = "tarball",
    image = ":py_helloworld_image",
    repo_tags = ["local/py_helloworld_v2_cli_app:latest"],
)

# See:
# - https://bazel.build/reference/be/common-definitions#common-attributes-tests
# - 
container_structure_test(
    name = "test",
    configs = ["tests/container_test.yaml"],
    image = ":py_helloworld_image",
    timeout = "short"
)
