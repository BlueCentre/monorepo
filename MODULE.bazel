# See:
# - https://www.youtube.com/watch?v=2Nn71RV_yhI
# - https://bazel.build/external/overview#blzmod
# - https://docs.aspect.build/rules/aspect_bazel_lib/
# - https://github.com/aspect-build/bazel-examples/blob/main/oci_python_image/MODULE.bazel

# module(name = "bzlmod_example")

# From https://registry.bazel.build/
bazel_dep(name = "aspect_bazel_lib", version = "1.34.0")
bazel_dep(name = "aspect_rules_js", version = "1.32.1")
bazel_dep(name = "aspect_rules_swc", version = "1.1.0")
bazel_dep(name = "aspect_rules_ts", version = "1.4.5")
bazel_dep(name = "bazel_skylib", version = "1.4.2")
bazel_dep(name = "rules_oci", version = "1.3.3")
bazel_dep(name = "container_structure_test", version = "1.16.0")
bazel_dep(name = "platforms", version = "0.0.7")
bazel_dep(name = "rules_proto", version = "5.3.0-21.7")
bazel_dep(name = "rules_python", version = "0.25.0")
bazel_dep(name = "rules_pkg", version = "0.9.1")
# See: https://github.com/bazelbuild/rules_go/blob/master/docs/go/core/bzlmod.md
# bazel_dep(name = "rules_go", version = "0.39.1", repo_name = "io_bazel_rules_go")
bazel_dep(name = "rules_go", version = "0.41.0")
# bazel_dep(name = "gazelle", version = "0.31.0", repo_name = "bazel_gazelle")
bazel_dep(name = "gazelle", version = "0.32.0")
bazel_dep(name = "rules_jvm_external", version = "5.3")
# bazel_dep(name = "rules_java", version = "6.5.1")



################################################################################
# rules_oci
################################################################################

# See:
# - https://github.com/bazel-contrib/rules_oci
# - https://github.com/GoogleContainerTools/distroless#bazel

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

# oci.toolchains(crane_version = "v0.14.0")
# use_repo(oci, "oci_crane_toolchains", "oci_crane_registry_toolchains", "oci_auth_config")

# register_toolchains("@oci_crane_toolchains//:all", "@oci_crane_registry_toolchains//:all")

# Declare external images you need to pull, for example: 
oci.pull(
    name = "distroless_base",
    # 'latest' is not reproducible, but it's convenient.
    # During the build we print a WARNING message that includes recommended 'digest' and 'platforms'
    # values which you can use here in place of 'tag' to pin for reproducibility.
    # tag = "latest",
    digest = "sha256:ccaef5ee2f1850270d453fdf700a5392534f8d1a8ca2acda391fbb6a06b81c86",
    image = "gcr.io/distroless/base",
    platforms = [
        "linux/amd64",
        # "linux/arm64",
    ],
)

use_repo(oci, "distroless_base")

################################################################################
# rules_go
################################################################################

# go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")

go_deps.module(
    path = "github.com/google/go-cmp",
    sum = "h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=",
    version = "v0.5.9",
)

use_repo(go_deps, "com_github_google_go_cmp")

################################################################################
# rules_python
################################################################################

# See:
# - https://hub.docker.com/layers/library/python/3.10-bullseye/images/sha256-b48e216f7c4adcf24fecd7016f3b8ead76866a19571819f67f47c1ccaf899717?context=explore
# - https://hub.docker.com/layers/library/python/3.11-bullseye/images/sha256-354903e205598c82f91ab025139923fcde8ab6e0cd3bb0f5b753aeaaecb71923?context=explore
# - https://hub.docker.com/layers/library/python/3.11-slim-bullseye/images/sha256-7d28177da146154adb077f7d71e21fdb9a7696128a7353b7db4cbb40c6e2d0ac?context=explore
# - https://hub.docker.com/_/python/tags
# - https://github.com/bazel-contrib/rules_oci/blob/main/oci/pull.bzl

oci.pull(
    name = "distroless_python",
    digest = "sha256:7d28177da146154adb077f7d71e21fdb9a7696128a7353b7db4cbb40c6e2d0ac",
    image = "python",
)

use_repo(oci, "distroless_python")

################################################################################
# rules_jvm_external
################################################################################

# See:
# - https://github.com/bazelbuild/rules_jvm_external/blob/master/docs/bzlmod.md
# - https://github.com/bazelbuild/rules_jvm_external/blob/master/examples/bzlmod/MODULE.bazel
# - https://github.com/bazelbuild/rules_jvm_external#pinning-artifacts-and-integration-with-bazels-downloader
# - https://github.com/bazelbuild/rules_jvm_external/tree/master#updating-maven_installjson
# - https://github.com/bazelbuild/rules_jvm_external/tree/master#multiple-maven_installjson-files

# Maven POJO
maven_pojo = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven_pojo.install(
    # name = "maven_install_in_custom_location",
    name = "maven_pojo",
    artifacts = [
        # This line is an example coordinate, you'd copy-paste your actual dependencies here
        # from your build.gradle or pom.xml file.
        # "org.seleniumhq.selenium:selenium-java:4.4.0",
        # log4j deps are added only for https://github.com/bazelbuild/rules_jvm_external/issues/630
        "org.apache.logging.log4j:log4j-api:2.20.0",
        "org.apache.logging.log4j:log4j-to-slf4j:2.20.0",
        "junit:junit:4.13.2",
        "com.google.guava:guava:32.1.2-jre",
        # "io.grpc:grpc-all:1.58.0",
        "io.grpc:grpc-all:1.51.1",
    ],
    fetch_sources = True,
    # use_credentials_from_home_netrc_file = True,
    repositories = [
        # Private repositories are supported through HTTP Basic auth
        # "http://username:password@localhost:8081/artifactory/my-repository",
        "https://maven.google.com",
        "https://repo1.maven.org/maven2",
        "https://jcenter.bintray.com/",
    ],
    # maven_install_json = "//third_party/java:maven_install.json",
    version_conflict_policy = "pinned",  # TODO: Research different approaches
    lock_file = "//third_party/java:maven_pojo_install.json",
)
# use_repo(maven_pojo, "maven_pojo")
use_repo(maven_pojo, "maven_pojo", "unpinned_maven_pojo")

# Maven Springboot
maven_springboot = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven_springboot.install(
    # name = "maven_install_in_custom_location",
    name = "maven_springboot",
    artifacts = [
        # This line is an example coordinate, you'd copy-paste your actual dependencies here
        # from your build.gradle or pom.xml file.
        "org.seleniumhq.selenium:selenium-java:4.4.0",
        # log4j deps are added only for https://github.com/bazelbuild/rules_jvm_external/issues/630
        "org.apache.logging.log4j:log4j-api:2.20.0",
        "org.apache.logging.log4j:log4j-to-slf4j:2.20.0",
        "org.hamcrest:hamcrest-library:1.3",
        "org.springframework.boot:spring-boot-actuator:2.3.9.RELEASE",
        "org.springframework.boot:spring-boot-actuator-autoconfigure:2.3.9.RELEASE",
        "org.springframework.boot:spring-boot-autoconfigure:2.3.9.RELEASE",
        "org.springframework.boot:spring-boot-test-autoconfigure:2.3.9.RELEASE",
        "org.springframework.boot:spring-boot-test:2.3.9.RELEASE",
        "org.springframework.boot:spring-boot:2.3.9.RELEASE",
        "org.springframework.boot:spring-boot-loader:2.3.9.RELEASE",
        "org.springframework.boot:spring-boot-starter:2.3.9.RELEASE",
        "org.springframework.boot:spring-boot-starter-web:2.3.9.RELEASE",
        "org.springframework.boot:spring-boot-starter-tomcat:2.3.9.RELEASE",
        "org.springframework.boot:spring-boot-starter-parent:2.3.9.RELEASE",
        "org.springframework:spring-aop:5.2.13.RELEASE",
        "org.springframework:spring-beans:5.2.13.RELEASE",
        "org.springframework:spring-context:5.2.13.RELEASE",
        "org.springframework:spring-core:5.2.13.RELEASE",
        "org.springframework:spring-test:5.2.13.RELEASE",
        "org.springframework:spring-web:5.2.13.RELEASE",
    ],
    # fetch_sources = True,
    # use_credentials_from_home_netrc_file = True,
    repositories = [
        # Private repositories are supported through HTTP Basic auth
        # "http://username:password@localhost:8081/artifactory/my-repository",
        # "https://maven.google.com",
        "https://repo1.maven.org/maven2",
    ],
    # maven_install_json = "//third_party/java:maven_install.json",
    # version_conflict_policy = "pinned",
    lock_file = "//third_party/java:maven_springboot_install.json",
)
# use_repo(maven, "maven")
use_repo(maven_springboot, "maven_springboot", "unpinned_maven_springboot")

# load("@maven//:defs.bzl", "pinned_maven_install")
# pinned_maven_install()

# See: 
# - https://github.com/bazel-contrib/rules_oci/blob/main/docs/pull.md#oci_pull
# - https://github.com/GoogleContainerTools/distroless/tree/main
oci.pull(
    name = "distroless_java",
    # digest = "latest",
    # digest = "sha256:161a1d97d592b3f1919801578c3a47c8e932071168a96267698f4b669c24c76d",
    # image = "gcr.io/distroless/java17",
    digest = "sha256:ea81aa75737c77ec3665aa06b49610ff16e1a3c2bbe36b9948b28c8469ea0b95",
    image = "gcr.io/distroless/java11",
)

use_repo(oci, "distroless_java")

################################################################################
# rules_java
################################################################################

# load("@rules_java//java:repositories.bzl", "rules_java_dependencies", "rules_java_toolchains")
# rules_java_dependencies()
# rules_java_toolchains()





################################################################################
# rules_python (old approach)
################################################################################

# python = use_extension("@rules_python//python:extensions.bzl", "python")
# python.toolchain(
#     name = "python3_11",
#     python_version = "3.11",
# )
# use_repo(python, "python3_11")
# use_repo(python, "python3_11_toolchains")

# register_toolchains(
#     "@python3_11_toolchains//:all",
# )

################################################################################
# rules_js
################################################################################

# npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)

# npm.npm_translate_lock(
#     name = "npm",
#     pnpm_lock = "//:pnpm-lock.yaml",
#     npmrc = "//:.npmrc",
# )

# use_repo(npm, "npm")

################################################################################
# rules_ts
################################################################################

# rules_ts_ext = use_extension(
#     "@aspect_rules_ts//ts:extensions.bzl",
#     "ext",
#     dev_dependency = True,
# )

# rules_ts_ext.deps()

# use_repo(rules_ts_ext, "npm_typescript")
