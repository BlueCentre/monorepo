{
  "version": 4,
  "terraform_version": "1.10.5",
  "serial": 85,
  "lineage": "524b4b7a-acba-f2ac-4c4b-af241b0a54f8",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": "Terraform driven Helm release of ArgoCD Helm chart",
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.14.2",
                "chart": "argo-cd",
                "first_deployed": 1739159851,
                "last_deployed": 1739296748,
                "name": "argocd",
                "namespace": "argocd",
                "notes": "In order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
                "revision": 3,
                "values": "{\"configs\":{\"credentialTemplates\":{},\"params\":{\"server.insecure\":true},\"rbac\":{\"policy.csv\":\"p, role:org-admin, applications, *, */*, allow\\np, role:org-admin, clusters, get, *, allow\\np, role:org-admin, repositories, *, *, allow\\np, role:org-admin, logs, get, *, allow\\np, role:org-admin, exec, create, */*, allow\\n# g, {argocdAdminEmail}, role:org-admin\\n# g, your-github-org:your-team, role:org-admin\\n\",\"policy.default\":\"role:readonly\",\"scopes\":\"[groups, email]\"},\"repositories\":{},\"repositoriesAnnotations\":{},\"secret\":{\"annotations\":{},\"createSecret\":true,\"githubSecret\":\"\",\"gitlabSecret\":\"\",\"labels\":{}}},\"crds\":{\"install\":true,\"keep\":false},\"global\":{\"additionalLabels\":{\"app\":\"argocd\",\"cluster-type\":\"worker\"},\"domain\":\"localhost\"},\"server\":{\"service\":{\"annotations\":{\"cloud.google.com/backend-config\":\"{\\\"ports\\\": {\\\"http\\\":\\\"argocd-server\\\"}}\",\"cloud.google.com/neg\":\"{\\\"ingress\\\": true}\"},\"type\":\"LoadBalancer\"}}}",
                "version": "7.8.2"
              }
            ],
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# https://github.com/argoproj/argo-helm/blob/main/charts/argo-cd/values.yaml\n# https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd#gke-application-load-balancer\n# https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#gke\n\ncrds:\n  install: true\n  keep: false\n\nglobal:\n  domain: localhost\n  additionalLabels:\n    app: argocd\n    cluster-type: worker\n\nconfigs:\n  # https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd#gke-application-load-balancer\n  # https://console.cloud.google.com/kubernetes/configmap/us-central1/lab-jn-dev-usc1-1/argocd/argocd-cmd-params-cm/details?project=prj-lab-james-nguyen\u0026supportedpurview=project\n  params:\n    server.insecure: true\n    # -- Enables [Applications in any namespace]\n    ## List of additional namespaces where applications may be created in and reconciled from.\n    ## The namespace where Argo CD is installed to will always be allowed.\n    ## Set comma-separated list. (e.g. app-team-one, app-team-two)\n    # application.namespaces: \"\"\n  # https://console.cloud.google.com/kubernetes/configmap/us-central1/lab-jn-dev-usc1-1/argocd/argocd-rbac-cm/details?project=prj-lab-james-nguyen\u0026supportedpurview=project\n  rbac:\n    policy.default: role:readonly\n    policy.csv: |\n      p, role:org-admin, applications, *, */*, allow\n      p, role:org-admin, clusters, get, *, allow\n      p, role:org-admin, repositories, *, *, allow\n      p, role:org-admin, logs, get, *, allow\n      p, role:org-admin, exec, create, */*, allow\n      # g, {argocdAdminEmail}, role:org-admin\n      # g, your-github-org:your-team, role:org-admin\n    scopes: '[groups, email]'\n  # https://console.cloud.google.com/kubernetes/configmap/us-central1/lab-jn-dev-usc1-1/argocd/argocd-cm/details?project=prj-lab-james-nguyen\u0026supportedpurview=project\n  # cm:\n  #   dex.config: |\n  #     # https://dexidp.io/docs/connectors/oidc/\n  #     connectors:\n  #     - type: oidc\n  #       id: google\n  #       name: Google\n  #       config:\n  #         # Connector config values starting with a \"$\" will read from the environment.\n  #         issuer: https://accounts.google.com\n  #         # $argocd-iap-oauth-client-secret:client_id\n  #         clientID: {iapClientID}\n  #         # $argocd-iap-oauth-client-secret:client_secret\n  #         clientSecret: {iapClientSecret}\n  #         # Dex's issuer URL + \"/callback\"\n  #         # redirectURI: http://127.0.0.1:5556/callback\n  #         # scopes:\n  #         # - email\n  #         # - profile\n  #         # # - groups\n  # -- Repository credentials to be used as Templates for other repos\n  ## Creates a secret for each key/value specified below to create repository credentials\n  credentialTemplates: {}\n    # github-enterprise-creds-1:\n    #   url: https://github.com/argoproj\n    #   githubAppID: 1\n    #   githubAppInstallationID: 2\n    #   githubAppEnterpriseBaseUrl: https://ghe.example.com/api/v3\n    #   githubAppPrivateKey: |\n    #     -----BEGIN OPENSSH PRIVATE KEY-----\n    #     ...\n    #     -----END OPENSSH PRIVATE KEY-----\n  # -- Repositories list to be used by applications\n  ## Creates a secret for each key/value specified below to create repositories\n  ## Note: the last example in the list would use a repository credential template, configured under \"configs.credentialTemplates\".\n  repositories: {}\n    # istio-helm-repo:\n    #   url: https://storage.googleapis.com/istio-prerelease/daily-build/master-latest-daily/charts\n    #   name: istio.io\n    #   type: helm\n    # private-helm-repo:\n    #   url: https://my-private-chart-repo.internal\n    #   name: private-repo\n    #   type: helm\n    #   password: my-password\n    #   username: my-username\n    # private-repo:\n    #   url: https://github.com/argoproj/private-repo\n  # -- Annotations to be added to `configs.repositories` Secret\n  repositoriesAnnotations: {}\n  # Argo CD sensitive data\n  # Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#sensitive-data-and-sso-client-secrets\n  secret:\n    # -- Create the argocd-secret\n    createSecret: true\n    # -- Labels to be added to argocd-secret\n    labels: {}\n    # -- Annotations to be added to argocd-secret\n    annotations: {}\n    # -- Shared secret for authenticating GitHub webhook events\n    githubSecret: \"\"\n    # -- Shared secret for authenticating GitLab webhook events\n    gitlabSecret: \"\"\n\n# extraObjects:\n# # Namespace will not exist on the first run so this will only succeed on the second run\n# # https://console.cloud.google.com/kubernetes/secret/us-central1/lab-jn-dev-usc1-1/argocd/argocd-iap-oauth-client?project=prj-lab-james-nguyen\u0026supportedpurview=project\n# - apiVersion: external-secrets.io/v1beta1\n#   kind: ExternalSecret\n#   metadata:\n#     name: argocd-external-secret\n#     namespace: argocd\n#     labels:\n#       # This label is required to access secret values when OAuth configurations\n#       app.kubernetes.io/part-of: argocd \n#   spec:\n#     refreshInterval: 1h\n#     secretStoreRef:\n#       kind: ClusterSecretStore\n#       name: external-secret-cluster-lab-secrets\n#     target:\n#       name: argocd-iap-oauth-client-secret\n#       creationPolicy: Owner\n#       template:\n#         metadata:\n#           labels:\n#             service: argocd-server\n#           annotations:\n#             reloader.stakater.com/match: \"true\"\n#     data:\n#     - secretKey: client_id\n#       remoteRef:\n#         key: ARGOCD_IAP_CLIENT_ID\n#     - secretKey: client_secret\n#       remoteRef:\n#         key: ARGOCD_IAP_CLIENT_SECRET\n# # Namespace will not exist on the first run so this will only succeed on the second run\n# - apiVersion: external-secrets.io/v1beta1\n#   kind: ExternalSecret\n#   metadata:\n#     name: argocd-repo-terraform-lab-project\n#     namespace: argocd\n#     labels:\n#       # This label is required to access secret values when OAuth configurations\n#       app.kubernetes.io/part-of: argocd \n#   spec:\n#     refreshInterval: 1h\n#     secretStoreRef:\n#       kind: ClusterSecretStore\n#       name: external-secret-cluster-lab-secrets\n#     target:\n#       name: argocd-repo-terraform-lab-project\n#       creationPolicy: Owner\n#       template:\n#         metadata:\n#           labels:\n#             argocd.argoproj.io/secret-type: repository\n#     data: \n#     - secretKey: sshPrivateKey\n#       remoteRef:\n#         key: TERRAFORM_LAB_PROJECT_SSH_PRIVATE_KEY\n#     - secretKey: url\n#       remoteRef:\n#         key: TERRAFORM_LAB_PROJECT_REPO_URL\n# # CRD does not exist yet so this will fail\n# # - apiVersion: argoproj.io/v1alpha1\n# #   kind: Application\n# #   metadata:\n# #     name: argocd-bootstrap\n# #     namespace: argocd\n# #     labels:\n# #       # This label is required to access secret values when OAuth configurations\n# #       app.kubernetes.io/part-of: argocd \n# #   spec:\n# #     project: default\n# #     source:\n# #       repoURL: 'git@github.com:ipv1337/terraform-lab-project.git'\n# #       path: 6.0-gitops-argocd\n# #       targetRevision: HEAD\n# #       directory:\n# #         recurse: true\n# #     destination:\n# #       server: 'https://kubernetes.default.svc'\n# #       namespace: argocd\n# #     syncPolicy:\n# #       automated: {}\n# #       syncOptions:\n# #       - CreateNamespace=true\n\nserver:\n  service:\n    # https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd#gke-application-load-balancer\n    # https://console.cloud.google.com/kubernetes/service/us-central1/lab-jn-dev-usc1-1/argocd/argocd-server/details?project=prj-lab-james-nguyen\u0026supportedpurview=project\n    # https://console.cloud.google.com/kubernetes/objectKind/networking.gke.io/servicenetworkendpointgroups?apiVersion=v1beta1\u0026project=prj-lab-james-nguyen\u0026supportedpurview=project\n    annotations:\n      # https://cloud.google.com/kubernetes-engine/docs/concepts/ingress#container-native_load_balancing\n      cloud.google.com/neg: '{\"ingress\": true}'\n      cloud.google.com/backend-config: '{\"ports\": {\"http\":\"argocd-server\"}}'\n    type: LoadBalancer\n  # ingress:\n  #   # https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd#gke-application-load-balancer\n  #   # https://console.cloud.google.com/kubernetes/objectKind/networking.k8s.io/ingresses?apiVersion=v1\u0026kind=INGRESS\u0026project=prj-lab-james-nguyen\u0026supportedpurview=project\n  #   enabled: true\n  #   annotations:\n  #     external-dns.alpha.kubernetes.io/hostname: localhost\n  #     external-dns.alpha.kubernetes.io/sync-enabled: true\n  #   controller: gke\n  #   gke:\n  #     # https://console.cloud.google.com/kubernetes/objectKind/cloud.google.com/backendconfigs?apiVersion=v1\u0026kind=BACKEND_CONFIG\u0026project=prj-lab-james-nguyen\u0026supportedpurview=project\n  #     backendConfig:\n  #       healthCheck:\n  #         checkIntervalSec: 30\n  #         timeoutSec: 5\n  #         healthyThreshold: 1\n  #         unhealthyThreshold: 2\n  #         type: HTTP\n  #         requestPath: /healthz\n  #         port: 8080\n  #       # https://cloud.google.com/iap/docs/custom-oauth-configuration\n  #       # https://cloud.google.com/iap/docs/enabling-kubernetes-howto#kubernetes-configure\n  #       # iap:\n  #       #   enabled: true\n  #       #   # https://cloud.google.com/kubernetes-engine/docs/how-to/ingress-configuration#enable_with_google_managed_oauth_client\n  #       #   oauthclientCredentials:\n  #       #     secretName: argocd-iap-oauth-client-secret\n  #     # https://console.cloud.google.com/kubernetes/objectKind/networking.gke.io/frontendconfigs?apiVersion=v1beta1\u0026project=prj-lab-james-nguyen\u0026supportedpurview=project\n  #     frontendConfig:\n  #       redirectToHttps:\n  #         enabled: true\n  #     # https://console.cloud.google.com/security/ccm/list/lbCertificates?project=prj-lab-james-nguyen\u0026supportedpurview=project\n  #     # https://console.cloud.google.com/kubernetes/objectKind/networking.gke.io/managedcertificates?apiVersion=v1\u0026kind=MANAGED_CERTIFICATE\u0026project=prj-lab-james-nguyen\u0026supportedpurview=project\n  #     managedCertificate:\n  #       enabled: true\n\n# https://cloudlogging.app.goo.gl/nT74RiVz1zJHUPUj6\n"
            ],
            "verify": false,
            "version": "7.8.2",
            "wait": false,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "cert-manager",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": "Terraform driven Helm release of cert-manager Helm chart",
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.17.0",
                "chart": "cert-manager",
                "first_deployed": 1739144809,
                "last_deployed": 1739297437,
                "name": "cert-manager",
                "namespace": "cert-manager",
                "notes": "\ncert-manager v1.17.0 has been deployed successfully!\n\nIn order to begin issuing certificates, you will need to set up a ClusterIssuer\nor Issuer resource (for example, by creating a 'letsencrypt-staging' issuer).\n\nMore information on the different types of issuers and how to configure them\ncan be found in our documentation:\n\nhttps://cert-manager.io/docs/configuration/\n\nFor information on how to configure cert-manager to automatically provision\nCertificates for Ingress resources, take a look at the `ingress-shim`\ndocumentation:\n\nhttps://cert-manager.io/docs/usage/ingress/\n",
                "revision": 2,
                "values": "{\"crds\":{\"enabled\":true,\"keep\":true},\"global\":{\"leaderElection\":{\"namespace\":\"cert-manager\"}},\"podDisruptionBudget\":{\"enabled\":true,\"minAvailable\":1}}",
                "version": "v1.17.0"
              }
            ],
            "name": "cert-manager",
            "namespace": "cert-manager",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jetstack.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# https://cert-manager.io/docs/installation/best-practice/#best-practice-helm-chart-values\n\nglobal:\n  # priorityClassName: system-cluster-critical\n\n  # Override if running on GKE Autopilot since kube-system is wardened\n  # https://cert-manager.io/docs/installation/compatibility/#gke-autopilot\n  leaderElection:\n    namespace: \"cert-manager\"\n\ncrds:\n  enabled: true\n  keep: true\n\n# replicaCount: 2\npodDisruptionBudget:\n  enabled: true\n  minAvailable: 1\n# automountServiceAccountToken: false\n# serviceAccount:\n#   automountServiceAccountToken: false\n# volumes:\n# - name: serviceaccount-token\n#   projected:\n#     defaultMode: 0444\n#     sources:\n#     - serviceAccountToken:\n#         expirationSeconds: 3607\n#         path: token\n#     - configMap:\n#         name: kube-root-ca.crt\n#         items:\n#         - key: ca.crt\n#           path: ca.crt\n#     - downwardAPI:\n#         items:\n#         - path: namespace\n#           fieldRef:\n#             apiVersion: v1\n#             fieldPath: metadata.namespace\n# volumeMounts:\n# - mountPath: /var/run/secrets/kubernetes.io/serviceaccount\n#   name: serviceaccount-token\n#   readOnly: true\n\n# webhook:\n#   replicaCount: 3\n#   podDisruptionBudget:\n#     enabled: true\n#     minAvailable: 1\n#   automountServiceAccountToken: false\n#   serviceAccount:\n#     automountServiceAccountToken: false\n#   volumes:\n#   - name: serviceaccount-token\n#     projected:\n#       defaultMode: 0444\n#       sources:\n#       - serviceAccountToken:\n#           expirationSeconds: 3607\n#           path: token\n#       - configMap:\n#           name: kube-root-ca.crt\n#           items:\n#           - key: ca.crt\n#             path: ca.crt\n#       - downwardAPI:\n#           items:\n#           - path: namespace\n#             fieldRef:\n#               apiVersion: v1\n#               fieldPath: metadata.namespace\n#   volumeMounts:\n#   - mountPath: /var/run/secrets/kubernetes.io/serviceaccount\n#     name: serviceaccount-token\n#     readOnly: true\n\n# cainjector:\n#   extraArgs:\n#   - --namespace=cert-manager\n#   - --enable-certificates-data-source=false\n#   replicaCount: 2\n#   podDisruptionBudget:\n#     enabled: true\n#     minAvailable: 1\n#   automountServiceAccountToken: false\n#   serviceAccount:\n#     automountServiceAccountToken: false\n#   volumes:\n#   - name: serviceaccount-token\n#     projected:\n#       defaultMode: 0444\n#       sources:\n#       - serviceAccountToken:\n#           expirationSeconds: 3607\n#           path: token\n#       - configMap:\n#           name: kube-root-ca.crt\n#           items:\n#           - key: ca.crt\n#             path: ca.crt\n#       - downwardAPI:\n#           items:\n#           - path: namespace\n#             fieldRef:\n#               apiVersion: v1\n#               fieldPath: metadata.namespace\n#   volumeMounts:\n#   - mountPath: /var/run/secrets/kubernetes.io/serviceaccount\n#     name: serviceaccount-token\n#     readOnly: true\n\n# startupapicheck:\n#   automountServiceAccountToken: false\n#   serviceAccount:\n#     automountServiceAccountToken: false\n#   volumes:\n#   - name: serviceaccount-token\n#     projected:\n#       defaultMode: 0444\n#       sources:\n#       - serviceAccountToken:\n#           expirationSeconds: 3607\n#           path: token\n#       - configMap:\n#           name: kube-root-ca.crt\n#           items:\n#           - key: ca.crt\n#             path: ca.crt\n#       - downwardAPI:\n#           items:\n#           - path: namespace\n#             fieldRef:\n#               apiVersion: v1\n#               fieldPath: metadata.namespace\n#   volumeMounts:\n#   - mountPath: /var/run/secrets/kubernetes.io/serviceaccount\n#     name: serviceaccount-token\n#     readOnly: true\n"
            ],
            "verify": false,
            "version": "v1.17.0",
            "wait": false,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "istio_base",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "base",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": "Terraform driven Helm release of Istio Base Helm chart",
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istio-base",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.23.3",
                "chart": "base",
                "first_deployed": 1739146109,
                "last_deployed": 1739146109,
                "name": "istio-base",
                "namespace": "istio-system",
                "notes": "Istio base successfully installed!\n\nTo learn more about the release, try:\n  $ helm status istio-base -n istio-system\n  $ helm get all istio-base -n istio-system\n",
                "revision": 1,
                "values": "{\"defaultRevision\":\"default\"}",
                "version": "1.23.3"
              }
            ],
            "name": "istio-base",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "defaultRevision: default\n"
            ],
            "verify": false,
            "version": "1.23.3",
            "wait": false,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "istio_cni",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "cni",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": "Terraform driven Helm release of Istio CNI Helm chart",
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istio-cni",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.23.3",
                "chart": "cni",
                "first_deployed": 1739146112,
                "last_deployed": 1739146112,
                "name": "istio-cni",
                "namespace": "kube-system",
                "notes": "\"istio-cni\" successfully installed!\n\nTo learn more about the release, try:\n  $ helm status istio-cni -n kube-system\n  $ helm get all istio-cni -n kube-system\n",
                "revision": 1,
                "values": "{\"cniBinDir\":\"/home/kubernetes/bin\"}",
                "version": "1.23.3"
              }
            ],
            "name": "istio-cni",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "cniBinDir: /home/kubernetes/bin\n"
            ],
            "verify": false,
            "version": "1.23.3",
            "wait": false,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "opentelemetry_collector",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "opentelemetry-collector",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": "Terraform driven Helm release of the OpenTelemetry Operator Helm chart",
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "opentelemetry-collector",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.86.0",
                "chart": "opentelemetry-collector",
                "first_deployed": 1739297189,
                "last_deployed": 1739297189,
                "name": "opentelemetry-collector",
                "namespace": "opentelemetry",
                "notes": "\n\n[WARNING] No resource limits or requests were set. Consider setter resource requests and limits for your collector(s) via the `resources` field.\n\n",
                "revision": 1,
                "values": "{\"mode\":\"deployment\",\"presets\":{\"clusterMetrics\":{\"enabled\":true}},\"replicaCount\":1}",
                "version": "0.71.0"
              }
            ],
            "name": "opentelemetry-collector",
            "namespace": "opentelemetry",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://open-telemetry.github.io/opentelemetry-helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# https://github.com/open-telemetry/opentelemetry-helm-charts/blob/main/charts/opentelemetry-operator/values.yaml\n\nmode: deployment\n\n# image:\n#   repository: \"otel/opentelemetry-collector-k8s\"\n\nreplicaCount: 1\n\npresets:\n  clusterMetrics:\n    enabled: true\n"
            ],
            "verify": false,
            "version": "0.71.0",
            "wait": false,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.cert_manager",
            "helm_release.opentelemetry_operator"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "opentelemetry_operator",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "opentelemetry-operator",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": "Terraform driven Helm release of the OpenTelemetry Operator Helm chart",
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "opentelemetry-operator",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.117.0",
                "chart": "opentelemetry-operator",
                "first_deployed": 1739297182,
                "last_deployed": 1739297450,
                "name": "opentelemetry-operator",
                "namespace": "opentelemetry",
                "notes": "\n\nopentelemetry-operator has been installed. Check its status by running:\n  kubectl --namespace opentelemetry get pods -l \"app.kubernetes.io/name=opentelemetry-operator\"\n\nVisit https://github.com/open-telemetry/opentelemetry-operator for instructions on how to create \u0026 configure OpenTelemetryCollector and Instrumentation custom resources by using the Operator.\n",
                "revision": 2,
                "values": "{\"admissionWebhooks\":{\"autoGenerateCert\":{\"certPeriodDays\":365,\"enabled\":true,\"recreate\":true},\"certManager\":{\"certificateAnnotations\":{},\"duration\":\"\",\"enabled\":true,\"issuerAnnotations\":{},\"issuerRef\":{},\"renewBefore\":\"\"},\"create\":true},\"crds\":{\"create\":true},\"manager\":{\"collectorImage\":{\"repository\":\"otel/opentelemetry-collector-k8s\"},\"leaderElection\":{\"enabled\":true}}}",
                "version": "0.79.0"
              }
            ],
            "name": "opentelemetry-operator",
            "namespace": "opentelemetry",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://open-telemetry.github.io/opentelemetry-helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "# https://github.com/open-telemetry/opentelemetry-helm-charts/blob/main/charts/opentelemetry-operator/values.yaml\n\n## Install CRDS with the right webhook settings\n## These are installed as templates, so they will clash with existing OpenTelemetry Operator CRDs in your cluster that are not already managed by the helm chart.\n## See https://github.com/open-telemetry/opentelemetry-helm-charts/blob/main/charts/opentelemetry-operator/UPGRADING.md#0560-to-0570 for more details.\ncrds:\n  create: true\n\nmanager:\n  collectorImage:\n    repository: \"otel/opentelemetry-collector-k8s\"\n  ## Enable leader election mechanism for protecting against split brain if multiple operator pods/replicas are started.\n  ## See more at https://docs.openshift.com/container-platform/4.10/operators/operator_sdk/osdk-leader-election.html\n  leaderElection:\n    enabled: true\n\n## Admission webhooks make sure only requests with correctly formatted rules will get into the Operator.\n## They also enable the sidecar injection for OpenTelemetryCollector and Instrumentation CR's\nadmissionWebhooks:\n  create: true\n  ## https://github.com/open-telemetry/opentelemetry-helm-charts/blob/main/charts/opentelemetry-operator/README.md#tls-certificate-requirement\n  ## TLS Certificate Option 1: Use certManager to generate self-signed certificate.\n  ## certManager must be enabled. If enabled, always takes precedence over options 2 and 3.\n  certManager:\n    enabled: true\n    ## Provide the issuer kind and name to do the cert auth job.\n    ## By default, OpenTelemetry Operator will use self-signer issuer.\n    issuerRef: {}\n    # kind:\n    # name:\n    ## Annotations for the cert and issuer if cert-manager is enabled.\n    certificateAnnotations: {}\n    issuerAnnotations: {}\n    # duration must be specified by a Go time.Duration (ending in s, m or h)\n    duration: \"\"\n    # renewBefore must be specified by a Go time.Duration (ending in s, m or h)\n    # Take care when setting the renewBefore field to be very close to the duration\n    # as this can lead to a renewal loop, where the Certificate is always in the renewal period.\n    renewBefore: \"\"\n  ## TLS Certificate Option 2: Use Helm to automatically generate self-signed certificate.\n  ## certManager must be disabled and autoGenerateCert must be enabled.\n  ## If true and certManager.enabled is false, Helm will automatically create a self-signed cert and secret for you.\n  autoGenerateCert:\n    enabled: true\n    # If set to true, new webhook key/certificate is generated on helm upgrade.\n    recreate: true\n    # Cert period time in days. The default is 365 days.\n    certPeriodDays: 365\n"
            ],
            "verify": false,
            "version": "0.79.0",
            "wait": false,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.cert_manager"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "patch_argocd_bootstrap",
      "provider": "provider[\"registry.terraform.io/alekc/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "argoproj.io/v1alpha1",
            "apply_only": false,
            "delete_cascade": null,
            "field_manager": "kubectl",
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/argoproj.io/v1alpha1/namespaces/argocd/applications/argocd-bootstrap",
            "ignore_fields": null,
            "kind": "Application",
            "live_manifest_incluster": "apiVersion=12ede79859725eab1f4c4a0fee20f6811e27e04df7f70a82359134a43ef92a6f\nkind=e7ad522ea327e5ba95534ef8355038ef7f7b86328c7cf9175886f60464c40d28\nmetadata.labels.app.kubernetes.io/part-of=2c94c18e8404a2466e8438cc5cb1edaa57d9da1b8be47a7f54df928ca3ed560d\nmetadata.name=3958a5ff04d119d0d52b86521f8407f68c5c3ecf414f6128bcca7dea12ba6ad5\nmetadata.namespace=2c94c18e8404a2466e8438cc5cb1edaa57d9da1b8be47a7f54df928ca3ed560d\nspec.destination.namespace=2c94c18e8404a2466e8438cc5cb1edaa57d9da1b8be47a7f54df928ca3ed560d\nspec.destination.server=1710ce7a0d4dfc0db490b6b6747644ffbb86e00748dd9562d4bee835e077b083\nspec.project=37a8eec1ce19687d132fe29051dca629d164e2c4958ba141d5f4133a33f0688f\nspec.source.path=ecc13a4aa2273d9274bac09671af57e50d2eb459fb4c4c53c099079cbe360aae\nspec.source.repoURL=3e4b81e3dee6b291b33000ecc89ae8e9855d987ff7f66511ebb88081d8045dbf\nspec.source.targetRevision=b5180223165af3583fd0724209986caf2a62692654b74c525027dda592404330",
            "live_uid": "1a81536e-5b8d-4e26-a228-5fa2b5098457",
            "name": "argocd-bootstrap",
            "namespace": "argocd",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "1a81536e-5b8d-4e26-a228-5fa2b5098457",
            "validate_schema": true,
            "wait": null,
            "wait_for": [],
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  name: argocd-bootstrap\n  namespace: argocd\n  labels:\n    # This label is required to access secret values when OAuth configurations\n    app.kubernetes.io/part-of: argocd \nspec:\n  project: default\n  source:\n    repoURL: 'ssh://git@ssh.github.com:443/ipv1337/terraform-lab-project.git'\n    path: 6.0-gitops-argocd\n    targetRevision: HEAD\n  destination:\n    server: 'https://kubernetes.default.svc'\n    namespace: argocd\n  syncPolicy: {}\n",
            "yaml_body_parsed": "apiVersion: argoproj.io/v1alpha1\nkind: Application\nmetadata:\n  labels:\n    app.kubernetes.io/part-of: argocd\n  name: argocd-bootstrap\n  namespace: argocd\nspec:\n  destination:\n    namespace: argocd\n    server: https://kubernetes.default.svc\n  project: default\n  source:\n    path: 6.0-gitops-argocd\n    repoURL: ssh://git@ssh.github.com:443/ipv1337/terraform-lab-project.git\n    targetRevision: HEAD\n  syncPolicy: {}\n",
            "yaml_incluster": "apiVersion=12ede79859725eab1f4c4a0fee20f6811e27e04df7f70a82359134a43ef92a6f\nkind=e7ad522ea327e5ba95534ef8355038ef7f7b86328c7cf9175886f60464c40d28\nmetadata.labels.app.kubernetes.io/part-of=2c94c18e8404a2466e8438cc5cb1edaa57d9da1b8be47a7f54df928ca3ed560d\nmetadata.name=3958a5ff04d119d0d52b86521f8407f68c5c3ecf414f6128bcca7dea12ba6ad5\nmetadata.namespace=2c94c18e8404a2466e8438cc5cb1edaa57d9da1b8be47a7f54df928ca3ed560d\nspec.destination.namespace=2c94c18e8404a2466e8438cc5cb1edaa57d9da1b8be47a7f54df928ca3ed560d\nspec.destination.server=1710ce7a0d4dfc0db490b6b6747644ffbb86e00748dd9562d4bee835e077b083\nspec.project=37a8eec1ce19687d132fe29051dca629d164e2c4958ba141d5f4133a33f0688f\nspec.source.path=ecc13a4aa2273d9274bac09671af57e50d2eb459fb4c4c53c099079cbe360aae\nspec.source.repoURL=3e4b81e3dee6b291b33000ecc89ae8e9855d987ff7f66511ebb88081d8045dbf\nspec.source.targetRevision=b5180223165af3583fd0724209986caf2a62692654b74c525027dda592404330"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "patch_argocd_secret_repository",
      "provider": "provider[\"registry.terraform.io/alekc/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "delete_cascade": null,
            "field_manager": "kubectl",
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/argocd/secrets/repo-lab",
            "ignore_fields": null,
            "kind": "Secret",
            "live_manifest_incluster": "apiVersion=3bfc269594ef649228e9a74bab00f042efc91d5acc6fbee31a382e80d42388fe\ndata.enableLfs=607e77964c59f6047096b6151c525e776d886f573fb7ce0dbb5c9d3f462fe87a\ndata.name=95a4b949fed9cb1486ae3021171ed509c863dd62499316ec28891eac08203f85\ndata.project=113c1a4ab79f27d086e0248185a5f996b506d161962cd3ba48cfeca76d199e3b\ndata.sshPrivateKey=23343192df5c4e2350bf28c44e1b71e34ef1331a46313799c9af4ee08cfc2577\ndata.type=1c8b76689dc7f3c3a9e48e6fd08b5ba587d6c134e6e80cc4ee81c8eddc08965a\ndata.url=e66757d49405f297aedba700a0ba1ed46880877132924d8fd85d77c7faa6463c\nkind=7e32a729b1226ed1270f282a8c63054d09b26bc9ec53ea69771ce38158dfade8\nmetadata.annotations.managed-by=96ee66d73fe66b086f87a3fe395a35f57dd52c1b88434c15d80be8c9e1f398a3\nmetadata.labels.argocd.argoproj.io/secret-type=e2885f2bbe3d7a8b08e328b9abf1e0824bebad97625b300e24649a256c6c4847\nmetadata.name=72cea36c24f459343ae525cd17ccf8e60fc100ab666f4e29e04ddff6050323b7\nmetadata.namespace=2c94c18e8404a2466e8438cc5cb1edaa57d9da1b8be47a7f54df928ca3ed560d\ntype=0f5b8e6e63a92492250f22e5236cbbe4db8f4080d4007ac078978b92e247e250",
            "live_uid": "3b015357-ed94-4ffa-9260-a29c91aa736d",
            "name": "repo-lab",
            "namespace": "argocd",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "3b015357-ed94-4ffa-9260-a29c91aa736d",
            "validate_schema": true,
            "wait": null,
            "wait_for": [],
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Secret\nmetadata:\n  name: repo-lab\n  namespace: argocd\n  labels:\n    argocd.argoproj.io/secret-type: repository\n  annotations:\n    managed-by: argocd.argoproj.io\ndata:\n  project: ZGVmYXVsdA==\n  name: cHJpdmF0ZS1sYWI=\n  type: Z2l0\n  url: \u003e-\n    c3NoOi8vZ2l0QHNzaC5naXRodWIuY29tOjQ0My9pcHYxMzM3L3RlcnJhZm9ybS1sYWItcHJvamVjdC5naXQ=\n  sshPrivateKey: \u003e-\n    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb1FJQkFBS0NBUUVBbnFJZ0Y0dGRlazR4cHJIZjJwZmFIYndlTUFSRFRlaVBZWU5FUW1MSkJmOWZ1bUlKClBkcEFzOEZHOCtvdlNWeW43R3h3a2dKSXZQcGxGcVRNN3d4Vnp1N3pMcjR2ZDk5UmVzMHRzL0dIUlRoS1I5WVYKdElKNXE4ekpVbk9XRmZXUlJZOThkRWUxdDFIQ3M3VXhEa2dSczRPZmVWMjBmbVordXI2eXJ1ZHR2UEdhVzdUSwp3TnNqT2wvTHpUaS9abkl5VUkyWHRsWElmc3ZBNnpVZUdsYzVnaFM4cXZkMjFYVmdtbnJFSWFER1dDTy9nR1BOCmNDN2NUL0dRam9ITTViOWM2dEc1dGFxQ0hMVFhjbVBjcFkyYjVSTm94czJZeXVIK29hUkphZXd3Z29Qai9uOW8KZXYrdkZibXlzWDQ3NlA3VFlSVURRNzZlQ0pHM3pnSHkrZzlVa3dJQkl3S0NBUUFveXBxSnRoOVo5dG1SUTY2WApTNTU4ckxkT0xQdGRMU3d2Qkg5RVJVbWlkTjRaKy9PL2NxTHNaT1piK21QdVN3YWI0VjdHZFoyczcrNGJ3L291CjEwbEQxd3RWS1pjdGMvQmhaL1hQTDNxT0pHcmZSYTNQVk1BemZjMWVXRHlKVGNaRkZrU1M3ZDVGRlFZdU5lZ0sKL0piV1k2eXFMZ25YWEM4M1ZadXBVWFA5WWtzR01EaU1OV0ZZUERQY3B1QTVBd0ZGU1NrUHloeFVyZE5WYjI2Vgp1aU0vOEdYVWpUeG80eC9KUnFjc1hDZ0poUURTTUhFTzcrQytrWlY1STFVSlZjTXErdkpsY1RBNVhEQXMzVk1jCmNBMU5zVDV3OUJLWGI1Sk9DWU9Hbm81V1o1ZHFuSWJyVDZyQmhQZ1RCZlBmaHJwVVpsbG5UMzRmUEk0eElDZDkKSWc3TEFvR0JBTXBKbjhMc2dVWGZVS2pZRkY1OFh3RDUzeWpwYS9yWTBQVmpOenRKN3dRUHNmVFMydW9tdEtsbgpxVnBKRGZRZXVad1pHYnJXMlJmY05qNzFsbmsxNUhDS0hyUm9yNiszZGczWExnMmp0L3VRYW10Q3ZkTVpwZzZ0CmlvdUlxYjVkdkJBMFhmYktqRmh5VmdzVGJrWVZoVXB6VWpwMWxZaDczcTZTN1diNUE5cmhBb0dCQU1qQklKMnoKR0g4OHo2NmJEVEhUZVVqWGRYbklaZ29qeUpXdGhXMm1sRmNIOU1vUFRLSEJobGdIb2pVUG5qYUdMQVBFRytrbQpXNU5Wdmd4UURKYzJPQkhWLzQrSmwvcHB1OVZlZzhTdnNCZEM5N1ZiQlVTQXd1L2hFVEFyRXJwaS9CVXJoOWJJCkJLSWtsM0ViTWJNMVVTWVhVVFE4WmJsTUhPQkRKYm1NTWJIekFvR0FOQVJOcHliZmFiMFV2YlBuK3dvSnpRME4KZjR4NjJocCs0QU9SM0F1eWZXTWZJYktRRUZNWWcxVXJqRDZyMFE4M0N1SGlDM2tUUUtaWEY0RDZ6cllXSzVFNwpHSEt3MVdtd3BIa3BHWE05OERzVURQUG5xMCs4L0hYRWlrZTJucXBqanlOb25vdmE4aXdIZnpEaDE0SGdjanJwClFqdCtPUW5vemM0Q2lERm5aQ3NDZ1lFQXd3VEFtVEdpeEw2N0hxVkFCSVJKN3Ywd1Ntcm15QVdCQm00TWxtZE8KUmVwNHhFbGdZcDY5QlE2NjFIV1NZTm9jSU9wa1FaTDUzNVVmQktXSWt1UTJkN253OGRZZW0zeW4xcFpVSGljQwoxTVMySGVOa00rckwvdmZrejdUUVhVbzJ0WHErZU4rUGVQQlltY0tsVHdDWCtSMzNITXoxR21jeC9tMGRWU2thClZSY0NnWUFSVjVCVnk4dnZxSXBzSExIWXpsYmJwZDRFYTVsWXU0aVI3Vjhucy9tVzd5dDFwUlhYYXBxRWlwMDQKMjJ2eWxMcHRremxOQk52TjNqaks5azZMTlRLT3RIRE9aU3ByZks5RytWOUc0VlRHT1k1WnhVc0FGU091SURYQgpuTWxBR2d2YjZ6cUlmQkF3dUUxNWNtUm84NDFFVXlWUkVaVC9mSFE0S2tuSVlDQkFrdz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\n  enableLfs: dHJ1ZQ==\ntype: Opaque\n",
            "yaml_body_parsed": "apiVersion: v1\ndata: (sensitive value)\nkind: Secret\nmetadata:\n  annotations:\n    managed-by: argocd.argoproj.io\n  labels:\n    argocd.argoproj.io/secret-type: repository\n  name: repo-lab\n  namespace: argocd\ntype: Opaque\n",
            "yaml_incluster": "apiVersion=3bfc269594ef649228e9a74bab00f042efc91d5acc6fbee31a382e80d42388fe\ndata.enableLfs=607e77964c59f6047096b6151c525e776d886f573fb7ce0dbb5c9d3f462fe87a\ndata.name=95a4b949fed9cb1486ae3021171ed509c863dd62499316ec28891eac08203f85\ndata.project=113c1a4ab79f27d086e0248185a5f996b506d161962cd3ba48cfeca76d199e3b\ndata.sshPrivateKey=23343192df5c4e2350bf28c44e1b71e34ef1331a46313799c9af4ee08cfc2577\ndata.type=1c8b76689dc7f3c3a9e48e6fd08b5ba587d6c134e6e80cc4ee81c8eddc08965a\ndata.url=e66757d49405f297aedba700a0ba1ed46880877132924d8fd85d77c7faa6463c\nkind=7e32a729b1226ed1270f282a8c63054d09b26bc9ec53ea69771ce38158dfade8\nmetadata.annotations.managed-by=96ee66d73fe66b086f87a3fe395a35f57dd52c1b88434c15d80be8c9e1f398a3\nmetadata.labels.argocd.argoproj.io/secret-type=e2885f2bbe3d7a8b08e328b9abf1e0824bebad97625b300e24649a256c6c4847\nmetadata.name=72cea36c24f459343ae525cd17ccf8e60fc100ab666f4e29e04ddff6050323b7\nmetadata.namespace=2c94c18e8404a2466e8438cc5cb1edaa57d9da1b8be47a7f54df928ca3ed560d\ntype=0f5b8e6e63a92492250f22e5236cbbe4db8f4080d4007ac078978b92e247e250"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "patch_argocd_secret_template",
      "provider": "provider[\"registry.terraform.io/alekc/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "delete_cascade": null,
            "field_manager": "kubectl",
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/argocd/secrets/repo-lab-template",
            "ignore_fields": null,
            "kind": "Secret",
            "live_manifest_incluster": "apiVersion=3bfc269594ef649228e9a74bab00f042efc91d5acc6fbee31a382e80d42388fe\ndata.name=d8b822e733e39bb3363d2f3349e352c0ad33f84c6e3f770ad0bbbbf92a6ea1bf\ndata.project=113c1a4ab79f27d086e0248185a5f996b506d161962cd3ba48cfeca76d199e3b\ndata.sshPrivateKey=23343192df5c4e2350bf28c44e1b71e34ef1331a46313799c9af4ee08cfc2577\ndata.type=1c8b76689dc7f3c3a9e48e6fd08b5ba587d6c134e6e80cc4ee81c8eddc08965a\ndata.url=e66757d49405f297aedba700a0ba1ed46880877132924d8fd85d77c7faa6463c\nkind=7e32a729b1226ed1270f282a8c63054d09b26bc9ec53ea69771ce38158dfade8\nmetadata.labels.argocd.argoproj.io/secret-type=6884d4c625212b67ef1f40a244751f6818e240349cf4b907c1226a79727218a1\nmetadata.name=cd98523d9813d93776fdc125cf4963d71f32b2d433f0fda2f183e8ec35775b07\nmetadata.namespace=2c94c18e8404a2466e8438cc5cb1edaa57d9da1b8be47a7f54df928ca3ed560d\ntype=0f5b8e6e63a92492250f22e5236cbbe4db8f4080d4007ac078978b92e247e250",
            "live_uid": "8318c16d-5e89-4c07-a853-05807251c157",
            "name": "repo-lab-template",
            "namespace": "argocd",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "8318c16d-5e89-4c07-a853-05807251c157",
            "validate_schema": true,
            "wait": null,
            "wait_for": [],
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Secret\nmetadata:\n  name: repo-lab-template\n  namespace: argocd\n  labels:\n    argocd.argoproj.io/secret-type: repo-creds\ndata:\n  project: ZGVmYXVsdA==\n  name: bGFi\n  type: Z2l0\n  url: \u003e-\n    c3NoOi8vZ2l0QHNzaC5naXRodWIuY29tOjQ0My9pcHYxMzM3L3RlcnJhZm9ybS1sYWItcHJvamVjdC5naXQ=\n  sshPrivateKey: \u003e-\n    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb1FJQkFBS0NBUUVBbnFJZ0Y0dGRlazR4cHJIZjJwZmFIYndlTUFSRFRlaVBZWU5FUW1MSkJmOWZ1bUlKClBkcEFzOEZHOCtvdlNWeW43R3h3a2dKSXZQcGxGcVRNN3d4Vnp1N3pMcjR2ZDk5UmVzMHRzL0dIUlRoS1I5WVYKdElKNXE4ekpVbk9XRmZXUlJZOThkRWUxdDFIQ3M3VXhEa2dSczRPZmVWMjBmbVordXI2eXJ1ZHR2UEdhVzdUSwp3TnNqT2wvTHpUaS9abkl5VUkyWHRsWElmc3ZBNnpVZUdsYzVnaFM4cXZkMjFYVmdtbnJFSWFER1dDTy9nR1BOCmNDN2NUL0dRam9ITTViOWM2dEc1dGFxQ0hMVFhjbVBjcFkyYjVSTm94czJZeXVIK29hUkphZXd3Z29Qai9uOW8KZXYrdkZibXlzWDQ3NlA3VFlSVURRNzZlQ0pHM3pnSHkrZzlVa3dJQkl3S0NBUUFveXBxSnRoOVo5dG1SUTY2WApTNTU4ckxkT0xQdGRMU3d2Qkg5RVJVbWlkTjRaKy9PL2NxTHNaT1piK21QdVN3YWI0VjdHZFoyczcrNGJ3L291CjEwbEQxd3RWS1pjdGMvQmhaL1hQTDNxT0pHcmZSYTNQVk1BemZjMWVXRHlKVGNaRkZrU1M3ZDVGRlFZdU5lZ0sKL0piV1k2eXFMZ25YWEM4M1ZadXBVWFA5WWtzR01EaU1OV0ZZUERQY3B1QTVBd0ZGU1NrUHloeFVyZE5WYjI2Vgp1aU0vOEdYVWpUeG80eC9KUnFjc1hDZ0poUURTTUhFTzcrQytrWlY1STFVSlZjTXErdkpsY1RBNVhEQXMzVk1jCmNBMU5zVDV3OUJLWGI1Sk9DWU9Hbm81V1o1ZHFuSWJyVDZyQmhQZ1RCZlBmaHJwVVpsbG5UMzRmUEk0eElDZDkKSWc3TEFvR0JBTXBKbjhMc2dVWGZVS2pZRkY1OFh3RDUzeWpwYS9yWTBQVmpOenRKN3dRUHNmVFMydW9tdEtsbgpxVnBKRGZRZXVad1pHYnJXMlJmY05qNzFsbmsxNUhDS0hyUm9yNiszZGczWExnMmp0L3VRYW10Q3ZkTVpwZzZ0CmlvdUlxYjVkdkJBMFhmYktqRmh5VmdzVGJrWVZoVXB6VWpwMWxZaDczcTZTN1diNUE5cmhBb0dCQU1qQklKMnoKR0g4OHo2NmJEVEhUZVVqWGRYbklaZ29qeUpXdGhXMm1sRmNIOU1vUFRLSEJobGdIb2pVUG5qYUdMQVBFRytrbQpXNU5Wdmd4UURKYzJPQkhWLzQrSmwvcHB1OVZlZzhTdnNCZEM5N1ZiQlVTQXd1L2hFVEFyRXJwaS9CVXJoOWJJCkJLSWtsM0ViTWJNMVVTWVhVVFE4WmJsTUhPQkRKYm1NTWJIekFvR0FOQVJOcHliZmFiMFV2YlBuK3dvSnpRME4KZjR4NjJocCs0QU9SM0F1eWZXTWZJYktRRUZNWWcxVXJqRDZyMFE4M0N1SGlDM2tUUUtaWEY0RDZ6cllXSzVFNwpHSEt3MVdtd3BIa3BHWE05OERzVURQUG5xMCs4L0hYRWlrZTJucXBqanlOb25vdmE4aXdIZnpEaDE0SGdjanJwClFqdCtPUW5vemM0Q2lERm5aQ3NDZ1lFQXd3VEFtVEdpeEw2N0hxVkFCSVJKN3Ywd1Ntcm15QVdCQm00TWxtZE8KUmVwNHhFbGdZcDY5QlE2NjFIV1NZTm9jSU9wa1FaTDUzNVVmQktXSWt1UTJkN253OGRZZW0zeW4xcFpVSGljQwoxTVMySGVOa00rckwvdmZrejdUUVhVbzJ0WHErZU4rUGVQQlltY0tsVHdDWCtSMzNITXoxR21jeC9tMGRWU2thClZSY0NnWUFSVjVCVnk4dnZxSXBzSExIWXpsYmJwZDRFYTVsWXU0aVI3Vjhucy9tVzd5dDFwUlhYYXBxRWlwMDQKMjJ2eWxMcHRremxOQk52TjNqaks5azZMTlRLT3RIRE9aU3ByZks5RytWOUc0VlRHT1k1WnhVc0FGU091SURYQgpuTWxBR2d2YjZ6cUlmQkF3dUUxNWNtUm84NDFFVXlWUkVaVC9mSFE0S2tuSVlDQkFrdz09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\n  type: Z2l0\ntype: Opaque\n",
            "yaml_body_parsed": "apiVersion: v1\ndata: (sensitive value)\nkind: Secret\nmetadata:\n  labels:\n    argocd.argoproj.io/secret-type: repo-creds\n  name: repo-lab-template\n  namespace: argocd\ntype: Opaque\n",
            "yaml_incluster": "apiVersion=3bfc269594ef649228e9a74bab00f042efc91d5acc6fbee31a382e80d42388fe\ndata.name=d8b822e733e39bb3363d2f3349e352c0ad33f84c6e3f770ad0bbbbf92a6ea1bf\ndata.project=113c1a4ab79f27d086e0248185a5f996b506d161962cd3ba48cfeca76d199e3b\ndata.sshPrivateKey=23343192df5c4e2350bf28c44e1b71e34ef1331a46313799c9af4ee08cfc2577\ndata.type=1c8b76689dc7f3c3a9e48e6fd08b5ba587d6c134e6e80cc4ee81c8eddc08965a\ndata.url=e66757d49405f297aedba700a0ba1ed46880877132924d8fd85d77c7faa6463c\nkind=7e32a729b1226ed1270f282a8c63054d09b26bc9ec53ea69771ce38158dfade8\nmetadata.labels.argocd.argoproj.io/secret-type=6884d4c625212b67ef1f40a244751f6818e240349cf4b907c1226a79727218a1\nmetadata.name=cd98523d9813d93776fdc125cf4963d71f32b2d433f0fda2f183e8ec35775b07\nmetadata.namespace=2c94c18e8404a2466e8438cc5cb1edaa57d9da1b8be47a7f54df928ca3ed560d\ntype=0f5b8e6e63a92492250f22e5236cbbe4db8f4080d4007ac078978b92e247e250"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argocd"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
