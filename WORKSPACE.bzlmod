# See:
# - https://docs.bazel.build/versions/main/build-ref.html#workspace
# - https://www.youtube.com/watch?v=2Nn71RV_yhI
# - https://bazel.build/external/overview#blzmod
# - https://docs.aspect.build/rules/aspect_bazel_lib/
# - https://github.com/aspect-build/bazel-examples/blob/main/oci_python_image/MODULE.bazel

# IMPORTANT: This file is kept for backward compatibility and gradual migration.
# Bazel 8.x strongly recommends using MODULE.bazel instead of WORKSPACE.
# This file should be considered deprecated and will eventually be removed.
#
# For new dependencies, please add them to MODULE.bazel instead.
# See the BAZEL_8_UPGRADE.md guide for migration instructions.

# Declares that this directory is the root of a Bazel workspace.
workspace(
    # How this workspace would be referenced with absolute labels from another workspace
    name = "monorepo",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# rules_python needs to be declared before using it
# Using 0.20.0 for WORKSPACE compatibility, but ideally should migrate to MODULE.bazel
http_archive(
    name = "rules_python",
    sha256 = "a644da969b6824cc87f8fe7b18101a8a6c57da5db39caa6566ec6109f37d2141",
    strip_prefix = "rules_python-0.20.0",
    url = "https://github.com/bazelbuild/rules_python/archive/refs/tags/0.20.0.tar.gz",
)

# Adding rules_cc - Updated for Bazel 8.x compatibility
http_archive(
    name = "rules_cc",
    sha256 = "4dccbfd22c0def164c8f47458bd50e0c7db17d5658d6ebc396a4c2998e867280",
    strip_prefix = "rules_cc-0.0.8",
    urls = ["https://github.com/bazelbuild/rules_cc/releases/download/0.0.8/rules_cc-0.0.8.tar.gz"],
)

# Adding rules_pkg
http_archive(
    name = "rules_pkg",
    sha256 = "360c23a88ceaf7f051abc99e2e6048cf7fe5d9af792690576554a88b2013612d",
    strip_prefix = "rules_pkg-0.9.1",
    urls = [
        "https://github.com/bazelbuild/rules_pkg/archive/refs/tags/0.9.1.tar.gz",
    ],
)

# Adding rules_jvm_external for Maven dependencies - Updated for Bazel 8.x
http_archive(
    name = "rules_jvm_external",
    sha256 = "d31e369b854322ca5098ea12c69d7175ded971435e55c18dd9dd5f29cc5249ac",
    strip_prefix = "rules_jvm_external-6.0",
    url = "https://github.com/bazelbuild/rules_jvm_external/releases/download/6.0/rules_jvm_external-6.0.tar.gz",
)

load("@rules_jvm_external//:repositories.bzl", "rules_jvm_external_deps")
rules_jvm_external_deps()

load("@rules_jvm_external//:setup.bzl", "rules_jvm_external_setup")
rules_jvm_external_setup()

#
# BuildBuddy
#

# See: 
# - https://www.buildbuddy.io/docs/rbe-setup#configuring-your-workspace
# - https://github.com/buildbuddy-io/buildbuddy-toolchain
# - https://github.com/buildbuddy-io/buildbuddy-toolchain#ubuntu-2004-image-experimental

http_archive(
    name = "io_buildbuddy_buildbuddy_toolchain",
    sha256 = "e899f235b36cb901b678bd6f55c1229df23fcbc7921ac7a3585d29bff2bf9cfd",
    strip_prefix = "buildbuddy-toolchain-fd351ca8f152d66fc97f9d98009e0ae000854e8f",
    urls = ["https://github.com/buildbuddy-io/buildbuddy-toolchain/archive/fd351ca8f152d66fc97f9d98009e0ae000854e8f.tar.gz"],
)

load("@io_buildbuddy_buildbuddy_toolchain//:deps.bzl", "buildbuddy_deps")

buildbuddy_deps()

load("@io_buildbuddy_buildbuddy_toolchain//:rules.bzl", "buildbuddy", "UBUNTU20_04_IMAGE")

buildbuddy(name = "buildbuddy_toolchain", container_image = UBUNTU20_04_IMAGE)

#
# Salesforce rules_spring - Updated for Bazel 8.x
#

# See:
# - https://github.com/salesforce/rules_spring/issues/153

http_archive(
    name = "rules_spring",
    sha256 = "01426d0a67c32ba0de0b0f3baa2b0810087789c6260c0c06741c1733956158a3",
    urls = ["https://github.com/salesforce/rules_spring/releases/download/2.2.4/rules-spring-2.2.4.zip"],
)

# ================================================================================
# MIGRATION NOTICE: The following section should be migrated to MODULE.bazel
# See BAZEL_8_UPGRADE.md for migration instructions.
# ================================================================================

#
# Local python approach with workaround support for multi-version
#

### Python Setup (https://github.com/bazelbuild/rules_python/blob/main/examples/pip_install/WORKSPACE)
### Goal: Hermeticity (https://bazel.build/basics/hermeticity)
# load("@rules_python//python:repositories.bzl", "py_repositories")
load("@rules_python//python:repositories.bzl", "py_repositories", "python_register_multi_toolchains")

py_repositories()

load("@rules_python//python/pip_install:repositories.bzl", "pip_install_dependencies")

pip_install_dependencies()

# TODO: Currently needs to match with python version in MODULE.bazel
default_python_version = "3.11"

python_register_multi_toolchains(
    name = "python",
    default_version = default_python_version,
    python_versions = ["3.11"],  # simplified single-version toolchain (multi-version removed)
    register_coverage_tool = True,
)

load("@python//:pip.bzl", "multi_pip_parse")
load("@python//3.11:defs.bzl", interpreter_3_11 = "interpreter")

multi_pip_parse(
    name = "pip_deps",
    default_version = default_python_version,
    python_interpreter_target = {"3.11": interpreter_3_11},
    requirements_lock = {"3.11": "//third_party/python:requirements_lock_3_11.txt"},
)

load("@pip_deps//:requirements.bzl", "install_deps")

install_deps()

# End section to be migrated to MODULE.bazel
